<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="cIWZ7-D:*[Z={bY:ZoW^">list2</variable><variable id="@Ja]{sS5Z3pu(rZB[{A5">index</variable></variables><block type="device_gesture_event" id="30Gc(myvmHhVDR?)493E" x="-544" y="-27"><field name="NAME">Gesture.Shake</field><statement name="HANDLER"><block type="device_show_leds" id="!H2fApt4M,i28hw/0Kmq"><field name="LEDS">`
        # # # # # 
        # # # # # 
        # # # # # 
        # # # # # 
        # # # # #
        `</field><next><block type="device_show_leds" id="BbIJknOfM`xe-Uq+xV:*"><field name="LEDS">`
        . . . . . 
        . # . # . 
        . . . . . 
        . # # # . 
        # . . . #
        `</field><next><block type="device_show_leds" id="?~6N9KtSfvxNC%9dECx-"><field name="LEDS">`
        . . . . . 
        . . . . . 
        . . . . . 
        . . . . . 
        . . . . .
        `</field><next><block type="pxt_controls_for" id="jvd1FyY.Ze1O07Ee:bKT"><value name="VAR"><shadow type="variables_get_reporter" id="eyqhw|l96H0Me-jjk,Zy"><field name="VAR" id="@Ja]{sS5Z3pu(rZB[{A5">index</field></shadow></value><value name="TO"><shadow type="math_whole_number"><field name="NUM">0</field></shadow><block type="lists_length" id="3y{6[eYn(xin[e=kjqq!"><value name="VALUE"><block type="variables_get" id="3bmSsmq,EpMFPLW?w-u/"><field name="VAR" id="cIWZ7-D:*[Z={bY:ZoW^">list2</field></block></value></block></value><statement name="DO"><block type="array_pop_statement" id=";Z*#D!6SS6e]c13[_~i$"><value name="list"><block type="variables_get" id="!|2^vIASquh$^T9LA+ij"><field name="VAR" id="cIWZ7-D:*[Z={bY:ZoW^">list2</field></block></value></block></statement></block></next></block></next></block></next></block></statement></block><block type="pxt-on-start" id="wbFUyy=:X[h[]mHo(#%)" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="tRxjl^ejc.A3xG{-Y`La" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let list2: number[] = []" numlines="1" declaredvars="list2"></mutation></block></statement></block><block type="device_button_event" id="7rlBv}DOFr:IN?St_B}H" x="140" y="3"><field name="NAME">Button.A</field><statement name="HANDLER"><block type="function_call" id="z*4[2sjnMu2t@t+vN1za"><mutation name="dotFunc" functionid="gUV2I*.[bcB8XICX4^[h"></mutation></block></statement></block><block type="device_button_event" id=".[.8$4=8~rgKyZ*K5]|#" x="402" y="3"><field name="NAME">Button.B</field><statement name="HANDLER"><block type="function_call" id="oK*_GC{,.l%$v^h-^KoF"><mutation name="lineFunc" functionid="4GB^JUQIVMB%.:Q=u,DI"></mutation></block></statement></block><block type="device_forever" id="~x~r2yB;WnB8=#Sm40Tv" x="665" y="3"></block><block type="input_logo_event" id="HX;Q,uhbSE?R@E@a-dt." x="870" y="3"><field name="action">TouchButtonEvent.Pressed</field><statement name="HANDLER"><block type="function_call" id="Cim;gek5TS%WSK:3;`QW"><mutation name="Translate" functionid="J_yc9k?G^e{/v%X)8?7A"></mutation></block></statement></block><block type="function_definition" id="Snj:YS1FRVkQB#7O:t8;" x="-157" y="176"><mutation name="dotFunc" functionid="gUV2I*.[bcB8XICX4^[h"></mutation><field name="function_name">dotFunc</field><statement name="STACK"><block type="device_show_leds" id="q31WY=S{WwZUoGB5sf]c"><field name="LEDS">`
        . . . . . 
        . . . . . 
        . . # . . 
        . . . . . 
        . . . . .
        `</field><next><block type="array_push" id="POcHsXt]#6]emL94uug:"><value name="list"><block type="variables_get" id="}(:EdDxAYd{QM4JB}GW{"><field name="VAR" id="cIWZ7-D:*[Z={bY:ZoW^">list2</field></block></value><value name="value"><shadow type="math_number" id="6B`xumxFQ#[*b3JFVuDG"><field name="NUM">0</field></shadow></value></block></next></block></statement></block><block type="function_definition" id="qe]MBF.8tMC+K-It3?;;" x="244" y="176"><mutation name="lineFunc" functionid="4GB^JUQIVMB%.:Q=u,DI"></mutation><field name="function_name">lineFunc</field><statement name="STACK"><block type="device_show_leds" id="@bXTWSYQzi7h2MkVlIbY"><field name="LEDS">`
        . . . . . 
        . . . . . 
        . # # # . 
        . . . . . 
        . . . . .
        `</field><next><block type="array_push" id="kmczr(VC]H/nHWc[;aIv"><value name="list"><block type="variables_get" id="05O}:Qm5fifPBIenv291"><field name="VAR" id="cIWZ7-D:*[Z={bY:ZoW^">list2</field></block></value><value name="value"><shadow type="math_number" id="/*P;8/kK)!Zur0PE9/{O"><field name="NUM">1</field></shadow></value></block></next></block></statement></block><block type="function_definition" id=",av9[6a_sw=6`0I%k]#2" x="645" y="176"><mutation name="Translate" functionid="J_yc9k?G^e{/v%X)8?7A"></mutation><field name="function_name">Translate</field><statement name="STACK"><block type="typescript_statement" id="b92(*ThkRDw,$-KEws_*" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let code = list2.join('');" numlines="1" declaredvars="code"></mutation><next><block type="typescript_statement" id=",D3rj8BKX$NRxrRZ9{4;" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (code) {" line1="        case &quot;01&quot;:" line2="            basic.showString(&quot;A&quot;);" line3="            break;" line4="        case &quot;1000&quot;:" line5="            basic.showString(&quot;B&quot;);" line6="            break;" line7="        case &quot;1010&quot;:" line8="            basic.showString(&quot;C&quot;);" line9="            break;" line10="        case &quot;100&quot;:" line11="            basic.showString(&quot;D&quot;);" line12="            break;" line13="        case &quot;0&quot;:" line14="            basic.showString(&quot;E&quot;);" line15="            break;" line16="        case &quot;0010&quot;:" line17="            basic.showString(&quot;F&quot;);" line18="            break; " line19="        case &quot;110&quot;:" line20="            basic.showString(&quot;G&quot;);" line21="            break;  " line22="        case &quot;0000&quot;:" line23="            basic.showString(&quot;H&quot;);" line24="            break; " line25="        case &quot;00&quot;:" line26="            basic.showString(&quot;I&quot;);" line27="            break;" line28="        case &quot;0111&quot;:" line29="            basic.showString(&quot;J&quot;);" line30="            break;" line31="        case &quot;101&quot;:" line32="            basic.showString(&quot;K&quot;);" line33="            break;" line34="        case &quot;0100&quot;:" line35="            basic.showString(&quot;L&quot;);" line36="            break;    " line37="        case &quot;11&quot;:" line38="            basic.showString(&quot;M&quot;);" line39="            break;" line40="        case &quot;10&quot;:" line41="            basic.showString(&quot;N&quot;);" line42="            break;  " line43="        case &quot;111&quot;:" line44="            basic.showString(&quot;O&quot;);" line45="            break;    " line46="        case &quot;0110&quot;:" line47="            basic.showString(&quot;P&quot;);" line48="            break; " line49="        case &quot;1101&quot;:" line50="            basic.showString(&quot;Q&quot;);" line51="            break;" line52="        case &quot;010&quot;:" line53="            basic.showString(&quot;R&quot;);" line54="            break;" line55="        case &quot;000&quot;:" line56="            basic.showString(&quot;S&quot;);" line57="            break;" line58="        case &quot;1&quot;:" line59="            basic.showString(&quot;T&quot;);" line60="            break;" line61="        case &quot;001&quot;:" line62="            basic.showString(&quot;U&quot;);" line63="            break;" line64="        case &quot;0001&quot;:" line65="            basic.showString(&quot;V&quot;);" line66="            break;" line67="        case &quot;011&quot;:" line68="            basic.showString(&quot;W&quot;);" line69="            break;" line70="        case &quot;1001&quot;:" line71="            basic.showString(&quot;X&quot;);" line72="            break; " line73="        case &quot;1011&quot;:" line74="            basic.showString(&quot;Y&quot;);" line75="            break;     " line76="        case &quot;1100&quot;:" line77="            basic.showString(&quot;Z&quot;);" line78="            break; " line79="        default:" line80="        basic.showLeds(`" line81="        . . . . ." line82="        . . . . ." line83="        . . . . ." line84="        . . . . ." line85="        . . . . ." line86="        `)" line87="             " line88="    }" numlines="89"></mutation></block></next></block></statement></block></xml>